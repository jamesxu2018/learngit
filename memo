https://github.com/jamesxu2018/learngit.git
git@github.com:jamesxu2018/learngit.git

jamesxu2018
g2G1z8mf

.gitignore
.idea/

user.name=jamesxu
user.email=jamesxu@juniper.net

ssh-keygen -t rsa -C 'jamesxu@juniper.net'

/c/Users/哥/.ssh

D:\bak\skydrive\automation\learngit
/d/bak/skydrive/automation/learngit

How to pull/push w/o type credential every time?

Solution1：
Use https but keep the credentials as below
edit the .gitconfig,add section as below
[credential]
helper = store

Do a push/pull once to store the credential

It will store the credential as below, so we will not be asked to input credential in future

C:\Users\哥\.gitconfig
C:\Users\哥\.git-credentials
https://jamesxu2018:g2G1z8mf@github.com

Solution2：
Use git directly
Note: if you ever use https, remove it first

哥@james MINGW64 /d/bak/skydrive/automation/learngit (master)
$ git remote -v
origin  https://github.com/jamesxu2018/learngit.git (fetch)
origin  https://github.com/jamesxu2018/learngit.git (push)

哥@james MINGW64 /d/bak/skydrive/automation/learngit (master)
$ git remote remove origin

哥@james MINGW64 /d/bak/skydrive/automation/learngit (master)
$ git remote -v

哥@james MINGW64 /d/bak/skydrive/automation/learngit (master)
$

git remote add origin git@github.com:jamesxu2018/learngit.git

$ git remote -v
origin  git@github.com:jamesxu2018/learngit.git (fetch)
origin  git@github.com:jamesxu2018/learngit.git (push)

git push --set-upstream origin master

哥@james MINGW64 /d/bak/skydrive/automation/learngit (master)
$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
nothing to commit, working tree clean

 
12.9 2018
 How to commit in one command?
 git commit -am
 or
 git commit -a -m
 
Understand the different between git diff and gif diff --cached
git diff compares the different of specified files in working folder and the same files in stage since last add, the purpose is to confirm any new changes in working folder are suitable to add
git diff --cached compares the stage and last commit, the purpose is to make sure current commit is suitable


Test in 93.61
Test https credential storage
Test https credential storage2
Test new git 2.2.1

Test for new git 2.20 for win


https://www.cnblogs.com/gudi/p/6597660.html

git config 的3个维度及对应的文件
git config --system
/etc/gitconfig
git config --global
C:\Documents and Settings\$USER
git config
.git/config


12.24
test for git diff --cached



12.25
add multiple files and or folder in a time
git add file1 file2 file3 folder1 folder2 folder3/
git add *.*
git add *.txt

git reset head  --- unstage
folder name can be either folder or folder/

delete file or folder tracked by git
git rm -rf  file or folder

版本回退
https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013744142037508cf42e51debf49668810645e02887691000

Test from jamesxu-T460

How to handle "git remote: HTTP Basic: Access denied" issue
Reason, used git credential has been changed 
Run cmd as Administrator
Type ”git config --system --unset credential.helper” to reset user's credential
or
git config --global http.emptyAuth true

Sevilla script location:
joc-test
git@git.juniper.net:sevilla/joc-test.git
https://git.juniper.net/sevilla/joc-test.git
config 
\joc-test\pythonrobot\pod_test\conf\config.properties



Linux下Git1.71升级
https://blog.csdn.net/jianjun_jiang/article/details/67061806



12.26
go back and go forward
git reset --hard HEAD^
git reset --hard HEAD^^
git reset --hard HEAD~100
git reset --hard commit_id
git log
git log --pretty=oneline
git log --oneline
git reflog
git revert commit_id


12.28
test for reset & push force
step1
step2
step3

git diff HEAD file
or
git diff HEAD -- file

test for withdraw
case1:Modify only(red)
git checkout -- file
case2: Modify and added(green)
git reset HEAD file
git checkout -- file


different of rm & git rm
rm delete the file from disk physically but this action will not be recorded in git
so, it bring an issue that it can't be committed before issue git add/rm file or an alternative way git commit -am 'abc'


Link to a remote repository
git remote add origin git@server-name:path/repo-name.git；

push local/master branch to remote origin/master at the first time, push the content and setup link as well.
git push -u origin master

push commit in future
git push origin master


test for branch dev

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>


git log --graph

12.29

add a branch from remote repository
git checkout -b feature2 origin/feature2
$ git branch -vv
  dev      5bd089a [origin/dev] li
  feature1 4f2a2ed [origin/feature1] .gitignore
* feature2 7f7f157 [origin/feature2] update memo
  master   7f7f157 [origin/master] update memo

